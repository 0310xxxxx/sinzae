package com.smhrd.myapp.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.smhrd.myapp.entity.MemberEntity;
import com.smhrd.myapp.mapper.MemberMapper;
import com.smhrd.myapp.vo.MemberVO;

import jakarta.servlet.http.HttpSession;

@Controller
public class MemberController {

	@Autowired
	private MemberMapper mapper;

	
	@GetMapping("/join")
	public String join() {
		return "join";
	}
	
	@PostMapping("/join-process")
	public String joinProcess(MemberVO vo) {
//		MemberEntity entity = mapper.save(vo.getId(), vo.getPw(), vo.getName(), vo.getTel());
		return "redirect:/";
	}
	
	
	
	
	
	
	
	// index.jsp 띄워주는 메소드
	// @RequestMapping() 보다 SpringBoot에서는 @GET~~ @POST~~ Mapping 권장
	@GetMapping("/")
	public String index() {
		return "index";
	}

	@GetMapping("/mypage")
	public String mypage() {
		return "mypage";
	}

	@PostMapping("/login")
	public String login(MemberVO vo, RedirectAttributes rttr) {
		MemberEntity entity = mapper.findByIdAndPw(vo.getId(), vo.getPw());
		MemberVO myData = new MemberVO(entity.getId(), entity.getPw(), entity.getName(), entity.getTel());
		rttr.addAttribute("myData", myData.getId());
		// 주의할 점 : 들어가는 value의 형태를 String으로 변환 가능한 형태로 넣어주기
		// "redirect:/mypage?myData=test"
		// /로그인 페이지 유효
		// /mypage 페이지 유효
		return "redirect:/mypage";

	}
//////////////////////////////// session 사용 ///////////////////////////////////////////////////////////////
//	@PostMapping("/login")
//	public String login(MemberVO vo, HttpSession session) {
//		// mapper.login(vo);
//		// Jpa (mapper == repository)
//		MemberEntity entity = mapper.findByIdAndPw(vo.getId(), vo.getPw());
//		// entity(JPA용) --> vo(java,jsp용)으로 변경
//		System.out.println("받아온 entity" + entity);
//		// mypage.jsp 하나 만들어서
//		MemberVO myData = new MemberVO(entity.getId(), entity.getPw(), entity.getName(), entity.getTel());
//		// 받아온 사용자의 정보를 pw 빼고 전부 출력
//		// model : request 경량화 버전
//		// --> 응답을 되돌려주기 전까지만 유효
//		session.setAttribute("myData", myData);
//		// session --> 브라우저 닫히기 전 까지 유효
//		return "redirect:/mypage";
//		// 요청 2 응답 2
//		
//		
//		
//	}

}
